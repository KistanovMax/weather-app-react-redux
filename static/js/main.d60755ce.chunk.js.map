{"version":3,"sources":["components/SearchPanel/SearchPanel.js","actions/fetchWeather.js","actions/fetchForecast.js","components/ErrorPlug/ErrorPlug.js","components/Loader/Loader.js","components/WeatherCard/WeatherCard.js","components/ForecastItem/ForecastItem.js","components/ForecastCard/ForecastCard.js","actions/pressForecastItem.js","components/DataCard/DateCard.js","components/App/App.js","reducers/forecast.js","reducers/weather.js","reducers/reducers.js","store/store.js","index.js"],"names":["SearchPanel","useState","city","setCity","dispatch","useDispatch","getWeather","cityName","API","type","fetch","then","res","json","result","message","payload","error","name","country","sys","temp","main","icon","weather","description","errorMessage","getForecast","list","pressEnter","useCallback","event","keyCode","target","value","useEffect","className","onKeyDown","placeholder","width","height","viewBox","fill","xmlns","fillRule","d","React","memo","ErrorPlug","Loader","Spinner","animation","variant","WeatherCard","useSelector","state","Weather","Math","round","src","alt","ForecastItem","month","day","hour","clickItem","date","Date","currentDate","getDate","getMonth","forecastDate","onClick","ForecastCard","Forecast","forecast","pressForecastItem","map","item","dt_txt","slice","dt","DateCard","getFullYear","currentWeekDay","getDay","App","initialState","loading","loaded","fetchForecast","action","fetchWeather","reducers","combineReducers","middleware","applyMiddleware","thunk","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d60755ce.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport './SearchPanel.css';\r\n\r\nimport { fetchWeather } from '../../actions/fetchWeather';\r\nimport { fetchForecast } from '../../actions/fetchForecast';\r\n\r\nfunction SearchPanel() {\r\n  const [city, setCity] = useState('Washington');\r\n\r\n  const dispatch = useDispatch();\r\n  const getWeather = (city) => dispatch(fetchWeather(city));\r\n  const getForecast = (city) => dispatch(fetchForecast(city));\r\n\r\n  const pressEnter = useCallback(\r\n    (event) => {\r\n      if (event.keyCode === 13) {\r\n        setCity(event.target.value);\r\n      }\r\n    },\r\n    [setCity]\r\n  );\r\n\r\n  useEffect(() => {\r\n    getWeather(city);\r\n    getForecast(city);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [city]);\r\n\r\n  return (\r\n    <div>\r\n      <div className='search-panel'>\r\n        <input\r\n          onKeyDown={pressEnter}\r\n          className='search'\r\n          type='text'\r\n          placeholder='Enter city'\r\n        />\r\n        <svg\r\n          width='1.5em'\r\n          height='1.5em'\r\n          viewBox='0 0 16 16'\r\n          className='bi bi-search'\r\n          fill='white'\r\n          xmlns='http://www.w3.org/2000/svg'\r\n        >\r\n          <path\r\n            fillRule='evenodd'\r\n            d='M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z'\r\n          />\r\n          <path\r\n            fillRule='evenodd'\r\n            d='M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z'\r\n          />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(SearchPanel);\r\n","export function fetchWeather(cityName) {\r\n  return function (dispatch) {\r\n    const API = {\r\n      key: '4778a72e106d124b8c8551777889dd53',\r\n      base: 'https://api.openweathermap.org/data/2.5/',\r\n    };\r\n    dispatch({\r\n      type: 'FETCH_WEATHER_REQUEST',\r\n    });\r\n    fetch(\r\n      `${API.base}weather?q=${cityName}&units=metric&appid=${API.key}`\r\n    )\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        // console.log(result);\r\n        if (result.message) {\r\n          dispatch({\r\n            type: 'FETCH_WEATHER_SUCCESS',\r\n            payload: {\r\n              error: result.message,\r\n            },\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: 'FETCH_WEATHER_SUCCESS',\r\n            payload: (result = {\r\n              name: result.name,\r\n              country: result.sys.country,\r\n              temp: result.main.temp,\r\n              icon: result.weather[0].icon,\r\n              description: result.weather[0].main,\r\n              errorMessage: '',\r\n            }),\r\n          });\r\n        }\r\n      });\r\n  };\r\n}\r\n","export function fetchForecast(cityName) {\r\n  return function (dispatch) {\r\n    const API = {\r\n      key: '4778a72e106d124b8c8551777889dd53',\r\n      base: 'https://api.openweathermap.org/data/2.5/',\r\n    };\r\n    dispatch({\r\n      type: 'FETCH_FORECAST_REQUEST',\r\n    });\r\n    fetch(\r\n      `${API.base}forecast?q=${cityName}&units=metric&appid=${API.key}`\r\n    )\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        // console.log(result);\r\n        if (result.message) {\r\n          dispatch({\r\n            type: 'FETCH_FORECAST_SUCCESS',\r\n            payload: {\r\n              error: result.message,\r\n            },\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: 'FETCH_FORECAST_SUCCESS',\r\n            payload: (result = {\r\n              name: result.city.name,\r\n              country: result.city.country,\r\n              list: result.list,\r\n            }),\r\n          });\r\n        }\r\n      });\r\n  };\r\n}\r\n","import React from 'react';\r\nimport './ErrorPlug.css';\r\n\r\nexport default function ErrorPlug({ error }) {\r\n  return (\r\n    <div className='error'>\r\n      <div className='frown-emoji'>\r\n        <svg\r\n          width='2em'\r\n          height='2em'\r\n          viewBox='0 0 16 16'\r\n          className='bi bi-emoji-frown'\r\n          fill='currentColor'\r\n          xmlns='http://www.w3.org/2000/svg'\r\n        >\r\n          <path\r\n            fillRule='evenodd'\r\n            d='M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z'\r\n          />\r\n          <path\r\n            fillRule='evenodd'\r\n            d='M4.285 12.433a.5.5 0 0 0 .683-.183A3.498 3.498 0 0 1 8 10.5c1.295 0 2.426.703 3.032 1.75a.5.5 0 0 0 .866-.5A4.498 4.498 0 0 0 8 9.5a4.5 4.5 0 0 0-3.898 2.25.5.5 0 0 0 .183.683z'\r\n          />\r\n          <path d='M7 6.5C7 7.328 6.552 8 6 8s-1-.672-1-1.5S5.448 5 6 5s1 .672 1 1.5zm4 0c0 .828-.448 1.5-1 1.5s-1-.672-1-1.5S9.448 5 10 5s1 .672 1 1.5z' />\r\n        </svg>\r\n      </div>\r\n      Sorry.. <br></br>\r\n      {error}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport './Loader.css';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className='spinner'>\r\n      <Spinner animation='border' variant='light' />{' '}\r\n      <div className='spinner-text'>Loading..</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport ErrorPlug from '../ErrorPlug/ErrorPlug';\r\nimport SpinnerItem from '../Loader/Loader';\r\n\r\nimport './WeatherCard.css';\r\n\r\nexport default function WeatherCard() {\r\n  const {\r\n    name,\r\n    country,\r\n    temp,\r\n    icon,\r\n    description,\r\n    error,\r\n  } = useSelector((state) => state.Weather.weather);\r\n\r\n  if (error) {\r\n    return <ErrorPlug error={error} />;\r\n  } else {\r\n    return (\r\n      <div className='weather-card'>\r\n        {name ? (\r\n          <div>\r\n            <div className='city'>\r\n              <svg\r\n                width='0.8em'\r\n                height='0.8em'\r\n                viewBox='0 0 16 16'\r\n                className='bi bi-geo-alt-fill'\r\n                fill='currentColor'\r\n                xmlns='http://www.w3.org/2000/svg'\r\n              >\r\n                <path\r\n                  fillRule='evenodd'\r\n                  d='M8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10zm0-7a3 3 0 1 0 0-6 3 3 0 0 0 0 6z'\r\n                />\r\n              </svg>\r\n              {name} <sup>{country}</sup>\r\n            </div>\r\n            <div>\r\n              <div className='weather'>\r\n                <div className='temperature'>\r\n                  {Math.round(temp)}\r\n                  <span>&deg;</span>\r\n                </div>\r\n                <div className='weather-type'>\r\n                  <img\r\n                    className='weather-icon'\r\n                    src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n                    alt='weather-icon'\r\n                  />\r\n                  <div className='weather-main'>{description}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <SpinnerItem />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './ForecastItem.css';\r\n\r\nexport default function ForecastItem({\r\n  name,\r\n  country,\r\n  temp,\r\n  icon,\r\n  month,\r\n  day,\r\n  hour,\r\n  description,\r\n  clickItem,\r\n}) {\r\n  const date = new Date();\r\n  const currentDate = `${\r\n    date.getDate() < 10 ? '0' + date.getDate() : date.getDate()\r\n  }.${date.getMonth() + 1}`;\r\n  let forecastDate = `${day}.${month}`;\r\n\r\n  if (forecastDate === currentDate) {\r\n    forecastDate = 'Today';\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={() =>\r\n        clickItem(name, country, temp, icon, description)\r\n      }\r\n      className='forecast-item'\r\n    >\r\n      <div className='forecast-item-date'>{forecastDate}</div>\r\n      <div className='forecast-item-time'>\r\n        {hour}\r\n        <sup> 00</sup>\r\n      </div>\r\n      <div className='forecast-item-temperature'>{temp}&deg;</div>\r\n      <img\r\n        className='forecast-item-icon'\r\n        src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n        alt='weather-icon'\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ForecastItem from '../ForecastItem/ForecastItem';\r\nimport './ForecastCard.css';\r\n\r\nimport { pressForecastItem } from '../../actions/pressForecastItem';\r\n\r\nexport default function ForecastCard() {\r\n  const {error, name, country, list } = useSelector(\r\n    (state) => state.Forecast.forecast\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  const clickItem = (name, country, temp, icon, description) =>\r\n    dispatch(\r\n      pressForecastItem(name, country, temp, icon, description)\r\n    );\r\n\r\n  if (error) {\r\n    return <div className='plug'></div>\r\n  } else {\r\n    return (\r\n      <div>\r\n        {name ? (\r\n          <div className='forecast-card'>\r\n            {list.map((item) => (\r\n              <ForecastItem\r\n                name={name}\r\n                country={country}\r\n                key={item.dt}\r\n                temp={Math.round(item.main.temp)}\r\n                description={item.weather[0].main}\r\n                icon={item.weather[0].icon}\r\n                month={item.dt_txt.slice(5, 7)}\r\n                day={item.dt_txt.slice(8, 10)}\r\n                hour={item.dt_txt.slice(11, 13) * 1}\r\n                clickItem={clickItem}\r\n              />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className='plug'></div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const pressForecastItem = (\r\n  name,\r\n  country,\r\n  temp,\r\n  icon,\r\n  description\r\n) => {\r\n  // console.log(`clicked ${name} ${country} ${temp} ${icon} ${description}`);\r\n  return {\r\n    type: 'PRESS_FORECAST_ITEM',\r\n    payload: { name, country, temp, icon, description },\r\n  };\r\n};\r\n\r\n// name, country, temp, icon, description\r\n","import React from 'react';\r\nimport './DateCard.css';\r\n\r\nexport default function DateCard() {\r\n  const monthArr = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  const weekDayArr = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ];\r\n  const date = new Date();\r\n  const currentDate = `${date.getDate()} ${\r\n    monthArr[date.getMonth()]\r\n  } ${date.getFullYear()}`;\r\n  const currentWeekDay = weekDayArr[date.getDay()];\r\n\r\n  return (\r\n    <div className='date-card'>\r\n      <div className='date-group'>\r\n        <div className='week-day'>{currentWeekDay}</div>\r\n        <div className='date'>{currentDate}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport SearchPanel from '../SearchPanel/SearchPanel';\nimport WeatherCard from '../WeatherCard/WeatherCard';\nimport ForecastCard from '../ForecastCard/ForecastCard';\nimport DateCard from '../DataCard/DateCard';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className='container night'>\n      <SearchPanel />\n      <WeatherCard />\n      <ForecastCard />\n      <DateCard />\n    </div>\n  );\n}\n\n// container\n// container night\n","const initialState = {\r\n  forecast: {},\r\n  loading: false,\r\n  loaded: false,\r\n  error: null,\r\n};\r\n\r\nconst fetchForecast = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_FORECAST_REQUEST':\r\n      return (state = {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      });\r\n    case 'FETCH_FORECAST_SUCCESS':\r\n      return (state = {\r\n        ...state,\r\n        forecast: action.payload,\r\n        loading: false,\r\n        loaded: true,\r\n      });\r\n    case 'FETCH_FORECAST_ERROR':\r\n      return (state = {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n        loaded: false,\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default fetchForecast;\r\n","const initialState = {\r\n  weather: {},\r\n  loading: false,\r\n  loaded: false,\r\n  error: null,\r\n};\r\n\r\nconst fetchWeather = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_WEATHER_REQUEST':\r\n      return (state = {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      });\r\n    case 'FETCH_WEATHER_SUCCESS':\r\n      return (state = {\r\n        ...state,\r\n        weather: action.payload,\r\n        loading: false,\r\n        loaded: true,\r\n      });\r\n    case 'FETCH_WEATHER_ERROR':\r\n      return (state = {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n        loaded: false,\r\n      });\r\n    case 'PRESS_FORECAST_ITEM':\r\n      return (state = {\r\n        ...state,\r\n        weather: action.payload,\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default fetchWeather;\r\n","import { combineReducers } from 'redux';\r\nimport forecast from './forecast';\r\nimport weather from './weather';\r\n\r\nconst reducers = combineReducers({\r\n  Forecast: forecast,\r\n  Weather: weather,\r\n});\r\n\r\nexport default reducers;\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducers from '../reducers/reducers';\r\n\r\nconst middleware = applyMiddleware(thunk);\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(middleware)\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}